{{- if and .Values.externalSecrets.enabled .Values.externalSecrets.createSecretStore }}
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ .Values.externalSecrets.secretStore.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "auth-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: security
spec:
  provider:
    {{- if eq .Values.externalSecrets.provider.type "vault" }}
    vault:
      server: {{ .Values.externalSecrets.provider.vault.server | quote }}
      path: {{ .Values.externalSecrets.provider.vault.path | default "secret" | quote }}
      version: {{ .Values.externalSecrets.provider.vault.version | default "v2" | quote }}
      auth:
        {{- if .Values.externalSecrets.provider.vault.auth.tokenSecretRef }}
        tokenSecretRef:
          name: {{ .Values.externalSecrets.provider.vault.auth.tokenSecretRef.name }}
          key: {{ .Values.externalSecrets.provider.vault.auth.tokenSecretRef.key }}
        {{- else if .Values.externalSecrets.provider.vault.auth.kubernetes }}
        kubernetes:
          mountPath: {{ .Values.externalSecrets.provider.vault.auth.kubernetes.mountPath | quote }}
          role: {{ .Values.externalSecrets.provider.vault.auth.kubernetes.role | quote }}
          serviceAccountRef:
            name: {{ .Values.externalSecrets.provider.vault.auth.kubernetes.serviceAccountRef.name }}
        {{- end }}
      {{- if .Values.externalSecrets.provider.vault.caProvider }}
      caProvider:
        type: {{ .Values.externalSecrets.provider.vault.caProvider.type | quote }}
        name: {{ .Values.externalSecrets.provider.vault.caProvider.name | quote }}
        key: {{ .Values.externalSecrets.provider.vault.caProvider.key | quote }}
      {{- end }}
    {{- else if eq .Values.externalSecrets.provider.type "aws" }}
    aws:
      service: SecretsManager
      region: {{ .Values.externalSecrets.provider.aws.region }}
      auth:
        {{- if .Values.externalSecrets.provider.aws.auth.jwt }}
        jwt:
          serviceAccountRef:
            name: {{ .Values.externalSecrets.provider.aws.auth.jwt.serviceAccountRef.name }}
        {{- else if .Values.externalSecrets.provider.aws.auth.secretRef }}
        secretRef:
          accessKeyIDSecretRef:
            name: {{ .Values.externalSecrets.provider.aws.auth.secretRef.accessKeyIDSecretRef.name }}
            key: {{ .Values.externalSecrets.provider.aws.auth.secretRef.accessKeyIDSecretRef.key }}
          secretAccessKeySecretRef:
            name: {{ .Values.externalSecrets.provider.aws.auth.secretRef.secretAccessKeySecretRef.name }}
            key: {{ .Values.externalSecrets.provider.aws.auth.secretRef.secretAccessKeySecretRef.key }}
        {{- end }}
    {{- else if eq .Values.externalSecrets.provider.type "gcp" }}
    gcpsm:
      projectId: {{ .Values.externalSecrets.provider.gcp.projectId }}
      auth:
        {{- if .Values.externalSecrets.provider.gcp.auth.workloadIdentity }}
        workloadIdentity:
          clusterLocation: {{ .Values.externalSecrets.provider.gcp.auth.workloadIdentity.clusterLocation }}
          clusterName: {{ .Values.externalSecrets.provider.gcp.auth.workloadIdentity.clusterName }}
          serviceAccountRef:
            name: {{ .Values.externalSecrets.provider.gcp.auth.workloadIdentity.serviceAccountRef.name }}
        {{- else if .Values.externalSecrets.provider.gcp.auth.secretRef }}
        secretRef:
          secretAccessKey:
            name: {{ .Values.externalSecrets.provider.gcp.auth.secretRef.secretAccessKey.name }}
            key: {{ .Values.externalSecrets.provider.gcp.auth.secretRef.secretAccessKey.key }}
        {{- end }}
    {{- end }}
{{- end }}