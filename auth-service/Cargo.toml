[[bench]]
name = "threat_conversion_bench"
harness = false

[package]
name = "auth-service"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
description = "Enterprise-grade authentication service with zero-trust architecture"
authors = ["Security Team"]
keywords = ["authentication", "oauth2", "security", "zero-trust"]
categories = ["web-programming::http-server", "authentication"]
repository = "https://github.com/lsendel/rust-security"
readme = "README.md"

[lints]
workspace = true

[dependencies]
axum = { workspace = true }
tokio = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["json", "env-filter"] }
log = { workspace = true }
uuid = { workspace = true }
webpki-roots = { workspace = true }
thiserror = { workspace = true }
http = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true }
anyhow = { workspace = true }
config = { workspace = true }
redis = { workspace = true }
deadpool-redis = { workspace = true }
utoipa = { workspace = true }
validator = { workspace = true }
argon2 = { workspace = true }
jsonwebtoken = { workspace = true }
ed25519-dalek = { workspace = true, optional = true }
chrono = { workspace = true }
hmac = { workspace = true }
data-encoding = { workspace = true }
sha2 = { workspace = true }
async-trait = { workspace = true }
hex = { workspace = true }
rand = { workspace = true }
once_cell = { workspace = true }
futures = { workspace = true }
base64 = { workspace = true }
constant_time_eq = { workspace = true }
toml = { workspace = true }
serde_yaml = { workspace = true }
common = { path = "../common" }
sqlx = { workspace = true, features = ["postgres", "sqlite", "runtime-tokio-rustls", "chrono", "uuid", "json", "migrate"], default-features = false, optional = true }
handlebars = { workspace = true, optional = true }
tempfile = { workspace = true, optional = true }
prometheus = { workspace = true, optional = true }
urlencoding = { workspace = true }
url = { workspace = true }
reqwest = { workspace = true }
regex = { workspace = true }
dashmap = { workspace = true }
num_cpus = { workspace = true }
ring = { workspace = true }
zeroize = { workspace = true, features = ["derive"] }
fastrand = { workspace = true }
rustls = { workspace = true }
rayon = { workspace = true }
flume = { workspace = true, optional = true }
time = { workspace = true, optional = true }
p256 = { workspace = true, optional = true }
aws-config = { workspace = true, optional = true }
aws-sdk-secretsmanager = { workspace = true, optional = true }
vaultrs = { workspace = true, optional = true }
tracing-appender = { workspace = true, optional = true }

[dev-dependencies]
criterion = { workspace = true }
reqwest = { workspace = true }
tokio = { workspace = true }
hmac = { workspace = true }
serde_json = { workspace = true }
uuid = { workspace = true }
chrono = { workspace = true }
url = { workspace = true }
urlencoding = { workspace = true }
tokio-test = { workspace = true }
regex = { workspace = true }
tempfile = { workspace = true }
proptest = "1.5"
sha1 = "0.10"

[features]
# MVP-focused feature set
default = ["security-essential", "vault"]
security-essential = ["crypto", "rate-limiting"]
full-integration = []
redis-sessions = []  # Redis dependencies are now always enabled
postgres = ["dep:sqlx"]
metrics = ["dep:prometheus"]
api-keys = ["dep:sqlx"]

# Core dependencies
crypto = ["ed25519-dalek"]
rate-limiting = []
monitoring = []
post-quantum = []
simd = []
vault = ["dep:vaultrs", "dep:tracing-appender"]
soar = []

# Build profiles are defined at workspace root

# [[bench]]
# name = "performance_suite"
# harness = false
# required-features = ["benchmarks"]  # Disabled due to pprof2 removal

[lib]
name = "auth_service"
path = "src/lib.rs"

[[bin]]
name = "auth-service"
path = "src/main.rs"

[[test]]
name = "api_key_management_it"
path = "tests/api_key_management_it.rs"
required-features = ["full-integration", "api-keys", "redis-sessions", "crypto"]

[[test]]
name = "oidc_state_it"
path = "tests/oidc_state_it.rs"
required-features = ["full-integration", "api-keys", "redis-sessions", "crypto"]

[[test]]
name = "scim_basic_auth_it"
path = "tests/scim_basic_auth_it.rs"
required-features = ["full-integration", "api-keys", "redis-sessions", "crypto"]

[[test]]
name = "token_flow_it"
path = "tests/token_flow_it.rs"
required-features = ["full-integration", "api-keys", "redis-sessions", "crypto"]

[[test]]
name = "token_refresh_it"
path = "tests/token_refresh_it.rs"
required-features = ["full-integration", "api-keys", "redis-sessions", "crypto"]

[[test]]
name = "totp_it"
path = "tests/totp_it.rs"
required-features = ["full-integration", "api-keys", "redis-sessions", "crypto"]

[target.'cfg(target_arch = "x86_64")'.dependencies]
# Time series counter uses x86-specific instructions; only include on x86_64 platforms.
# Not a real crate, commented out
