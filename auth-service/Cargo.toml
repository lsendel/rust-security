[package]
name = "auth-service"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"

[lints]
workspace = true

[dependencies]
axum = { workspace = true }
tokio = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
uuid = { workspace = true }
getrandom = { workspace = true }
thiserror = { workspace = true }
http = { workspace = true }
hyper = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true }
bytes = { workspace = true }
anyhow = { workspace = true }
dotenvy = { workspace = true }
redis = { workspace = true, optional = true }
utoipa = { workspace = true }
# Swagger UI is optional; enable with `--features docs`
utoipa-swagger-ui = { workspace = true, optional = true }
# Security enhancements
validator = { workspace = true }
secrecy = { workspace = true }
argon2 = { workspace = true }
jsonwebtoken = { workspace = true }
# RSA key generation for JWKS rotation - using latest secure version
rsa = { workspace = true }
chrono = { workspace = true }
envy = { workspace = true }
hmac = { workspace = true }
sha1 = { workspace = true }
data-encoding = { workspace = true }
sha2 = { workspace = true }
# TLS/HTTPS support
axum-server = { workspace = true }
rcgen = { workspace = true }
# Secret management
async-trait = { workspace = true }
aes-gcm = { workspace = true }
chacha20poly1305 = { workspace = true }
hex = { workspace = true }
rand = { workspace = true }
once_cell = { workspace = true }
base64 = { workspace = true }
# Configuration file parsing
toml = { workspace = true }
serde_yaml = { workspace = true }
# Common workspace dependency
common = { path = "../common" }
# SOAR optional dependencies
sqlx = { workspace = true, features = ["postgres", "sqlite", "runtime-tokio-rustls", "chrono", "uuid", "json", "migrate", "macros"], default-features = false, optional = true }
handlebars = { workspace = true, optional = true }
lettre = { workspace = true, optional = true }
tera = { workspace = true, optional = true }
tempfile = { workspace = true, optional = true }
walkdir = { workspace = true, optional = true }
# Updated to fix protobuf vulnerability RUSTSEC-2024-0437
prometheus = { workspace = true }
urlencoding = { workspace = true }
url = { workspace = true }
reqwest = { workspace = true }
regex = { workspace = true }
# High-performance rate limiting
dashmap = { workspace = true }
num_cpus = { workspace = true }
# OpenTelemetry for distributed tracing
opentelemetry = { workspace = true, optional = true }
opentelemetry-jaeger = { workspace = true, optional = true }
tracing-opentelemetry = { workspace = true, optional = true }
opentelemetry_sdk = { workspace = true, optional = true }
# Performance and benchmarking
criterion = { workspace = true, optional = true }
# SIMD and hardware acceleration
packed_simd_2 = { workspace = true, optional = true }
ring = { workspace = true }
aes = { workspace = true }
rayon = { workspace = true }
# Memory optimization
mimalloc = { workspace = true, optional = true }
jemalloc-sys = { workspace = true, optional = true }
# High-performance async runtime
tokio-metrics = { workspace = true }
# Connection pooling optimization
bb8 = { workspace = true }
bb8-redis = { workspace = true }
deadpool = { workspace = true }
deadpool-redis = { workspace = true, optional = true }
# Optimized serialization
rmp-serde = { workspace = true }
bincode = { workspace = true }
# Metrics and profiling
pprof = { workspace = true, optional = true }
metrics = { workspace = true }
metrics-prometheus = { workspace = true }

# Threat Hunting and ML Dependencies
# Machine Learning and Data Analysis
smartcore = { workspace = true, optional = true }
candle-core = { workspace = true, optional = true }
candle-nn = { workspace = true, optional = true }
candle-transformers = { workspace = true, optional = true }
ndarray = { workspace = true, optional = true }
nalgebra = { workspace = true, optional = true }
# Graph analysis for attack pattern detection
petgraph = { workspace = true, optional = true }
# Time series analysis
tsc = { workspace = true, optional = true }
# Statistics and analytics
statrs = { workspace = true, optional = true }
# Advanced collections for threat correlation
indexmap = { workspace = true, optional = true }
# Async channels and queues
flume = { workspace = true, optional = true }
crossbeam = { workspace = true, optional = true }
# Geospatial analysis for location anomalies
geo = { workspace = true, optional = true }
geoutils = { workspace = true, optional = true }
# Enhanced time handling
time = { workspace = true, optional = true }
# Memory-mapped files for large datasets
memmap2 = { workspace = true, optional = true }
# Compression for data storage
lz4_flex = { workspace = true, optional = true }
# IP address analysis
ipnet = { workspace = true, optional = true }
# Enhanced string processing for log parsing
fancy-regex = { workspace = true, optional = true }
aho-corasick = { workspace = true, optional = true }
# Bloom filters for efficient lookups
bloomfilter = { workspace = true, optional = true }
# Probabilistic data structures
probabilistic-collections = { workspace = true, optional = true }
# Lazy static for static variables
lazy_static = { workspace = true }

# Post-Quantum Cryptography dependencies
pqcrypto-mlkem = { workspace = true, optional = true }
pqcrypto-mldsa = { workspace = true, optional = true }
# Hybrid cryptography support
p256 = { workspace = true, optional = true }
p384 = { workspace = true, optional = true }
ed25519-dalek = { workspace = true, optional = true }
x25519-dalek = { workspace = true, optional = true }
# Certificate and PKI support for post-quantum
x509-cert = { workspace = true, optional = true }
pkcs8 = { workspace = true, optional = true }
der = { workspace = true, optional = true }
# Performance and security utilities
constant_time_eq = { workspace = true }
zeroize = { workspace = true }
subtle = { workspace = true }

vaultrs = { workspace = true, optional = true }
aws-config = { workspace = true, optional = true }
aws-sdk-secretsmanager = { workspace = true, optional = true }

[dev-dependencies]
criterion = { workspace = true }
reqwest = { workspace = true }
tokio = { workspace = true }
serde_json = { workspace = true }
# Test dependencies
uuid = { workspace = true }
base64 = { workspace = true }
hmac = { workspace = true }
sha2 = { workspace = true }
sha1 = { workspace = true }
data-encoding = { workspace = true }
chrono = { workspace = true }
url = { workspace = true }
urlencoding = { workspace = true }
# Property-based testing
proptest = { workspace = true }
quickcheck = { workspace = true }
quickcheck_macros = { workspace = true }
# Performance testing
tokio-test = { workspace = true }
# Security testing
regex = { workspace = true }
# Test utilities
tempfile = { workspace = true }
wiremock = { workspace = true }
# Fuzzing
arbitrary = { workspace = true }
# Coverage and benchmarking in tests
# tarpaulin = "0.30"  # Commented out - not available on crates.io

[features]
default = ["fast-build", "api-keys", "enhanced-session-store"]  # Development-optimized defaults, ML features disabled for security
fast-build = []  # Minimal feature set for fast development builds
docs = ["utoipa-swagger-ui"]
vault = ["vaultrs"]
aws = ["aws-config", "aws-sdk-secretsmanager"]
tracing = ["opentelemetry", "opentelemetry-jaeger", "tracing-opentelemetry", "opentelemetry_sdk"]
benchmarks = ["criterion", "pprof"]
simd = ["dep:packed_simd_2"]
mimalloc = ["dep:mimalloc"]
jemalloc = ["dep:jemalloc-sys"]
performance = ["simd", "mimalloc"]
profiling = ["pprof"]
# Secrets management feature flags
secrets-vault-aws = ["aws", "vault"]
# Post-quantum cryptography feature flags
post-quantum = ["pqcrypto-mlkem", "pqcrypto-mldsa", "x509-cert", "pkcs8", "der"]
hybrid-crypto = ["post-quantum", "p256", "p384", "ed25519-dalek", "x25519-dalek"]
# Threat hunting feature flags
threat-hunting = ["smartcore", "petgraph", "ndarray", "nalgebra", "geo", "statrs", "indexmap", "flume", "crossbeam"]
ml-enhanced = ["threat-hunting", "candle-core", "candle-nn", "candle-transformers"]
advanced-analytics = ["threat-hunting", "ml-enhanced", "dep:tsc", "dep:memmap2", "dep:lz4_flex", "dep:probabilistic-collections"]
optimizations = []
soar = ["dep:sqlx", "dep:lettre", "dep:tempfile", "dep:tera", "dep:handlebars", "dep:walkdir"]
api-keys = ["dep:sqlx"]
enhanced-session-store = ["dep:redis", "dep:deadpool-redis"]

[[bench]]
name = "performance_suite"
harness = false
required-features = ["benchmarks"]

[lib]
name = "auth_service"
path = "src/lib.rs"

[[bin]]
name = "auth-service"
path = "src/main.rs"

[[test]]
name = "api_key_management_it"
path = "tests/api_key_management_it.rs"
required-features = ["api-keys"]