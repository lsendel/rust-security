[package]
name = "auth-service"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
description = "Enterprise-grade authentication service with zero-trust architecture"
authors = ["Security Team"]
keywords = ["authentication", "oauth2", "security", "zero-trust"]
categories = ["web-programming::http-server", "authentication"]
repository = "https://github.com/lsendel/rust-security"
readme = "README.md"

[lints.rust]
unused_crate_dependencies = "allow"
unused_imports = "warn"
dead_code = "warn"
unsafe_code = "forbid"

[lints.clippy]
all = "warn"
pedantic = "warn"
cargo = "warn"
nursery = "warn"

[dependencies]
axum = { workspace = true }
tokio = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
uuid = { workspace = true }
thiserror = { workspace = true }
http = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true }
# bytes = { workspace = true }  # Unused - removed
anyhow = { workspace = true }
config = { workspace = true }
dotenvy = { workspace = true }
redis = { workspace = true, optional = true }
utoipa = { workspace = true }
# Swagger UI is optional; enable with `--features docs`
utoipa-swagger-ui = { workspace = true, optional = true }
# Security enhancements
validator = { workspace = true }
argon2 = { workspace = true }
bcrypt = { workspace = true }
jsonwebtoken = { workspace = true }
# RSA key generation for JWKS rotation - using latest secure version
# rsa = { workspace = true }  # Removed due to RUSTSEC-2023-0071
ed25519-dalek = { workspace = true, optional = true }
chrono = { workspace = true }
envy = { workspace = true }
hmac = { workspace = true }
# sha1 = { workspace = true }  # Unused - removed
data-encoding = { workspace = true }
sha2 = { workspace = true }
# TLS/HTTPS support
# Secret management
async-trait = { workspace = true }
hex = { workspace = true }
rand = { workspace = true }
once_cell = { workspace = true }
base64 = { workspace = true }
constant_time_eq = { workspace = true }
# Configuration file parsing
toml = { workspace = true }
# Additional dependencies for features
futures = { workspace = true }
serde_yaml = { workspace = true }
# Common workspace dependency
common = { path = "../common" }
# SOAR optional dependencies
sqlx = { workspace = true, features = ["postgres", "sqlite", "runtime-tokio-rustls", "chrono", "uuid", "json", "migrate", "macros"], default-features = false, optional = true }
handlebars = { workspace = true, optional = true }
lettre = { workspace = true, optional = true }
tera = { workspace = true, optional = true }
tempfile = { workspace = true, optional = true }
walkdir = { workspace = true, optional = true }
# Updated to fix protobuf vulnerability RUSTSEC-2024-0437
prometheus = { workspace = true, optional = true }
urlencoding = { workspace = true }
url = { workspace = true }
reqwest = { workspace = true }
regex = { workspace = true }
# High-performance rate limiting
dashmap = { workspace = true, optional = true }
# num_cpus = { workspace = true }  # Unused - removed
# OpenTelemetry for distributed tracing
opentelemetry = { workspace = true, features = ["metrics"], optional = true }
opentelemetry-jaeger = { workspace = true, optional = true }
tracing-opentelemetry = { workspace = true, optional = true }
opentelemetry_sdk = { workspace = true, features = ["metrics"], optional = true }
# SIMD and hardware acceleration (removed due to compatibility issues)
# packed_simd_2 = { workspace = true, optional = true }
ring = { workspace = true }
zeroize = { workspace = true }

# Additional missing dependencies identified during compilation
# ipnetwork = { workspace = true }  # Unused - removed
fastrand = { workspace = true }
opentelemetry-otlp = { workspace = true }
# x509-parser = { workspace = true }  # Unused - removed
rustls = { workspace = true }
# rustls-pemfile = { workspace = true }  # Unused - removed
webpki-roots = { workspace = true }
rayon = { workspace = true }
# High-performance async runtime
# Connection pooling optimization
deadpool-redis = { workspace = true, optional = true }
# bb8 = { workspace = true, optional = true }  # Unused - removed
# bb8-redis = { workspace = true, optional = true }  # Unused - removed
# Optimized serialization
# Metrics and profiling
# pprof2 = { workspace = true, optional = true }  # Removed due to RUSTSEC-2024-0408

# Threat Hunting and ML Dependencies
# Machine Learning and Data Analysis
smartcore = { workspace = true, optional = true }
ndarray = { workspace = true, optional = true }
nalgebra = { workspace = true, optional = true }
# Graph analysis for attack pattern detection
petgraph = { workspace = true, optional = true }
# Time series analysis
# tsc gated under target-specific dependencies below
# Statistics and analytics
statrs = { workspace = true, optional = true }
# Advanced collections for threat correlation
indexmap = { workspace = true, optional = true }
# Async channels and queues
flume = { workspace = true, optional = true }
crossbeam = { workspace = true, optional = true }
# Geospatial analysis for location anomalies
geo = { workspace = true, optional = true }
geoutils = { workspace = true, optional = true }
# Enhanced time handling
time = { workspace = true, optional = true }
# Memory-mapped files for large datasets
memmap2 = { workspace = true, optional = true }
# Compression for data storage
lz4_flex = { workspace = true, optional = true }
# IP address analysis
ipnet = { workspace = true, optional = true }
# Enhanced string processing for log parsing
fancy-regex = { workspace = true, optional = true }
aho-corasick = { workspace = true, optional = true }
# Bloom filters for efficient lookups
bloomfilter = { workspace = true, optional = true }
# Probabilistic data structures
probabilistic-collections = { workspace = true, optional = true }
# Lazy static for static variables
lazy_static = { workspace = true }

# Post-Quantum Cryptography dependencies
pqcrypto-mlkem = { workspace = true, optional = true }
pqcrypto-mldsa = { workspace = true, optional = true }
# Hybrid cryptography support
p256 = { workspace = true, optional = true }
p384 = { workspace = true, optional = true }
# ed25519-dalek already included above
x25519-dalek = { workspace = true, optional = true }
# Certificate and PKI support for post-quantum
x509-cert = { workspace = true, optional = true }
pkcs8 = { workspace = true, optional = true }
der = { workspace = true, optional = true }
# Performance and security utilities

vaultrs = { workspace = true, optional = true }
aws-config = { workspace = true, optional = true }
aws-sdk-secretsmanager = { workspace = true, optional = true }

[dev-dependencies]
criterion = { workspace = true }
reqwest = { workspace = true }
tokio = { workspace = true }
serde_json = { workspace = true }
# Test dependencies
uuid = { workspace = true }
chrono = { workspace = true }
url = { workspace = true }
urlencoding = { workspace = true }
# Property-based testing
proptest = { workspace = true }
quickcheck = { workspace = true }
quickcheck_macros = { workspace = true }
# Performance testing
tokio-test = { workspace = true }
# Security testing
regex = { workspace = true }
# Test utilities
tempfile = { workspace = true }
wiremock = { workspace = true }
# Coverage and benchmarking in tests
# tarpaulin = "0.30"  # Commented out - not available on crates.io

[features]
ml-basic = ["threat-hunting", "smartcore", "ndarray"]
ml-enhanced = ["ml-basic", "advanced-analytics", "nalgebra", "petgraph"]  # Added missing feature
default = ["security-essential", "api-keys", "enhanced-session-store", "crypto"]  # Production-optimized security defaults
# Core security features
security-essential = ["crypto", "rate-limiting", "audit-logging"]
security-enhanced = ["security-essential", "post-quantum", "zero-trust"]
rate-limiting = ["dep:dashmap"]
audit-logging = ["tracing"]
zero-trust = ["enhanced-session-store", "threat-hunting"]

# Development features
fast-build = []  # Minimal feature set for fast development builds
development = ["docs", "fast-build"]
docs = ["utoipa-swagger-ui"]
vault = ["vaultrs"]
aws = ["aws-config", "aws-sdk-secretsmanager"]
tracing = ["opentelemetry", "opentelemetry-jaeger", "tracing-opentelemetry", "opentelemetry_sdk"]
benchmarks = []  # Removed pprof2 due to security vulnerability
simd = []  # SIMD support removed due to packed_simd_2 compatibility issues
performance = ["simd"]
crypto = ["ed25519-dalek"]
# profiling = []  # Removed pprof2 due to security vulnerability
# Secrets management feature flags
secrets-vault-aws = ["aws", "vault"]
# Post-quantum cryptography feature flags
post-quantum = ["pqcrypto-mlkem", "pqcrypto-mldsa", "x509-cert", "pkcs8", "der"]
hybrid-crypto = ["post-quantum", "p256", "p384", "ed25519-dalek", "x25519-dalek"]
# Threat hunting feature flags
threat-hunting = ["smartcore", "petgraph", "ndarray", "nalgebra", "geo", "statrs", "indexmap", "flume", "crossbeam"]
advanced-analytics = ["threat-hunting", "dep:memmap2", "dep:lz4_flex", "dep:probabilistic-collections"]
optimizations = []
# Production feature sets
production = ["security-enhanced", "monitoring", "secrets-vault-aws"]
monitoring = ["tracing", "dep:prometheus"]

# Service features
soar = ["dep:sqlx", "dep:lettre", "dep:tempfile", "dep:tera", "dep:handlebars", "dep:walkdir"]
api-keys = ["dep:sqlx"]
enhanced-session-store = ["dep:redis", "dep:deadpool-redis"]

# Complete feature sets
enterprise = ["production", "threat-hunting", "soar", "hybrid-crypto"]
all-features = ["enterprise", "development", "advanced-analytics"]

# Build profiles are defined at workspace root

# [[bench]]
# name = "performance_suite"
# harness = false
# required-features = ["benchmarks"]  # Disabled due to pprof2 removal

[lib]
name = "auth_service"
path = "src/lib.rs"

[[bin]]
name = "auth-service"
path = "src/main.rs"

[[test]]
name = "api_key_management_it"
path = "tests/api_key_management_it.rs"
required-features = ["api-keys"]

[target.'cfg(target_arch = "x86_64")'.dependencies]
# Time series counter uses x86-specific instructions; only include on x86_64 platforms.
# tsc = { workspace = true, optional = true }  # Not a real crate, commented out
