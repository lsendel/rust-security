name: SonarQube Analysis

permissions:
  contents: read

concurrency:
  group: sonarqube-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis
        
    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
        
    - name: Cargo cache
      uses: Swatinem/rust-cache@v2

    - name: Install just
      run: |
        if ! command -v just >/dev/null 2>&1; then
          sudo apt-get update
          sudo apt-get install -y just || true
        fi
          
    - name: Install cargo-sonar
      run: cargo install cargo-sonar
      
    - name: Install coverage tools
      run: |
        cargo install cargo-tarpaulin
        cargo install cargo-llvm-cov
        
    - name: Run tests with coverage
      run: |
        cargo llvm-cov --all-features --workspace --lcov --output-path target/coverage/lcov.info
        
    - name: Run Clippy analysis
      run: |
        cargo clippy --all-targets --all-features --message-format=json > target/clippy-report.json || true
        
    - name: Generate SonarQube report
      run: |
        cargo sonar --coverage-path target/coverage/lcov.info --clippy-path target/clippy-report.json
        
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-quality-gate-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        projectBaseDir: .
        
    - name: Upload SonarQube results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: sonarqube-results
        path: |
          .scannerwork/
          target/coverage/
          target/clippy-report.json
        retention-days: 30
