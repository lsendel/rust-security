name: CI

permissions:
  contents: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main, master, develop, '**/fix-*', '**/feat-*' ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - 'user-portal/**'
  pull_request:
    branches: [ main, master, develop ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - 'user-portal/**'

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Install just
        run: |
          if ! command -v just >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y just || true
          fi

      - name: Check formatting
        run: |
          if command -v just >/dev/null 2>&1; then
            just fmt-check
          else
            cargo fmt --all -- --check
          fi

      - name: Run clippy
        run: |
          if command -v just >/dev/null 2>&1; then
            just lint
          else
            cargo clippy --workspace -- -D warnings
          fi

      - name: Run tests
        run: |
          if command -v just >/dev/null 2>&1; then
            just test
          else
            cargo test --workspace --locked
          fi
        env:
          RUST_BACKTRACE: full

      - name: Upload test artifacts (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: target/debug

  policy-service:
    name: Policy Service (isolated)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        task: [build, clippy, test]
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      PORT: 8081
      ALLOWED_ORIGINS: http://localhost:3000
      DATABASE_URL: postgres://postgres:test_password@localhost:5432/test_db
      REDIS_URL: redis://localhost:6379
      RUST_BACKTRACE: full
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Install just
        run: |
          if ! command -v just >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y just || true
          fi

  ci-beta:
    name: CI (beta toolchain - check only)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (beta)
        uses: dtolnay/rust-toolchain@beta

      - name: Cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Cargo check
        run: cargo check --workspace --locked

  ci-os-smoke:
    name: CI OS Smoke (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Cargo check (workspace)
        run: cargo check --workspace --locked

      - name: Build policy-service
        if: matrix.task == 'build'
        run: |
          if command -v just >/dev/null 2>&1; then
            just build
          else
            cargo build -p policy-service --all-features --locked
          fi

      - name: Clippy policy-service
        if: matrix.task == 'clippy'
        run: |
          if command -v just >/dev/null 2>&1; then
            just lint
          else
            cargo clippy -p policy-service --all-targets --all-features -- -D warnings
          fi

      - name: Test policy-service
        if: matrix.task == 'test'
        env:
          RUST_BACKTRACE: full
        run: |
          if command -v just >/dev/null 2>&1; then
            just test
          else
            cargo test -p policy-service --all-features -- --nocapture
          fi
