name: Threat Intelligence CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/threat_intel/**'
      - 'src/integration/**'
      - 'tests/**'
      - 'Cargo.toml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/threat_intel/**'
      - 'src/integration/**'
      - 'tests/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run unit tests
      run: cargo test threat_intel_tests --verbose
    
    - name: Run integration tests
      run: cargo test middleware_integration_tests --verbose
    
    - name: Run load tests
      run: cargo test load_test --verbose
    
    - name: Build release
      run: cargo build --release
    
    - name: Run automated test suite
      run: ./scripts/test-threat-intel.sh

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Security audit
      run: cargo audit
    
    - name: Check for unsafe code
      run: |
        if grep -r "unsafe" src/; then
          echo "Unsafe code detected in threat intelligence module"
          exit 1
        fi
