#!/bin/bash
# Pre-commit hook to check for compiler warnings

set -euo pipefail

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${YELLOW}🔍 Running pre-commit warning check...${NC}"

# Components to check
COMPONENTS=(
    "auth-core"
    "common"
    "api-contracts"
    "policy-service"
    "compliance-tools"
)

# Track if any component has warnings
HAS_WARNINGS=false

# Check each component
for component in "${COMPONENTS[@]}"; do
    echo -n "Checking $component... "
    
    # Run cargo check and capture output
    if OUTPUT=$(cargo check -p "$component" 2>&1); then
        # Count warnings
        WARNING_COUNT=$(echo "$OUTPUT" | grep -c "warning:" || true)
        
        if [ "$WARNING_COUNT" -eq 0 ]; then
            echo -e "${GREEN}✅${NC}"
        else
            echo -e "${RED}❌ ($WARNING_COUNT warnings)${NC}"
            HAS_WARNINGS=true
            
            # Show first few warnings
            echo "$OUTPUT" | grep "warning:" | head -3
        fi
    else
        echo -e "${RED}❌ (compilation failed)${NC}"
        HAS_WARNINGS=true
    fi
done

# Check for deprecated API usage
echo ""
echo -e "${YELLOW}Checking for deprecated APIs...${NC}"

DEPRECATED_PATTERNS=(
    "base64::encode"
    "base64::decode"
    "redis::Client::get_async_connection"
)

for pattern in "${DEPRECATED_PATTERNS[@]}"; do
    if git diff --cached --name-only | xargs grep -l "$pattern" 2>/dev/null | head -1 > /dev/null; then
        echo -e "${RED}❌ Found deprecated API: $pattern${NC}"
        HAS_WARNINGS=true
    fi
done

# Final decision
echo ""
if [ "$HAS_WARNINGS" = true ]; then
    echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${RED}  ⚠️  Commit blocked: Compiler warnings detected ${NC}"
    echo -e "${RED}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
    echo "Please fix all warnings before committing:"
    echo "  1. Run: cargo check --workspace"
    echo "  2. Run: ./scripts/maintain-warning-free.sh --fix"
    echo "  3. Review and fix remaining warnings manually"
    echo ""
    echo "To bypass (not recommended):"
    echo "  git commit --no-verify"
    exit 1
else
    echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${GREEN}  ✅ All checks passed - no warnings detected!   ${NC}"
    echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
fi

exit 0