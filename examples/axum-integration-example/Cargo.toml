[package]
name = "axum-integration-example"
version = "0.1.0"
edition = "2021"
description = "Production-ready Axum web framework integration example with comprehensive security features"
authors = ["Security Team"]
license = "MIT OR Apache-2.0"
keywords = ["axum", "web", "security", "rest-api"]
categories = ["web-programming::http-server", "development-tools::testing"]
repository = "https://github.com/lsendel/rust-security"

[lints]
workspace = true

[dependencies]
# Web framework with security features
axum = { workspace = true }
tokio = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true, features = ["cors", "trace", "limit", "timeout"], optional = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }

# Logging and tracing
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# Database dependencies
sqlx = { workspace = true, optional = true }

# Authentication and security dependencies
jsonwebtoken = { workspace = true, optional = true }
bcrypt = { workspace = true, optional = true }

# Documentation dependencies
utoipa = { workspace = true, optional = true }
utoipa-swagger-ui = { workspace = true, optional = true }

# TLS and server dependencies
rustls = { workspace = true, optional = true }
axum-server = { workspace = true, optional = true }

# Connection pooling and monitoring
deadpool = { workspace = true, optional = true }
prometheus = { workspace = true, optional = true }
metrics = { workspace = true, optional = true }
metrics-prometheus = { workspace = true, optional = true }
opentelemetry = { workspace = true, optional = true }
tracing-opentelemetry = { workspace = true, optional = true }
redis = { workspace = true, optional = true }



# Additional dependencies for enhanced features
thiserror = { workspace = true }
async-trait = { workspace = true }
chrono = { workspace = true }

# Common utilities
common = { path = "../../common" }

[features]
# Production-ready defaults with security
default = ["auth", "security", "validation"]

# Core security features (simplified to remove unused dependencies)
security = ["dep:tower-http"]
validation = []

# Authentication features
auth = ["auth-basic", "auth-advanced"]
auth-basic = ["dep:jsonwebtoken", "dep:bcrypt"]
auth-advanced = ["auth-basic"]

# Database features with security
database = ["postgres"]
postgres = ["dep:sqlx"]
sqlite = ["dep:sqlx"]

# Production features
production = ["tls", "monitoring", "compression", "connection-pooling", "health"]
tls = ["dep:rustls", "dep:axum-server"]
compression = ["tower-http/compression-gzip", "tower-http/compression-deflate"]
connection-pooling = ["dep:deadpool"]
health = []

# Monitoring and observability
monitoring = ["metrics", "telemetry"]
metrics = ["dep:prometheus", "dep:metrics", "dep:metrics-prometheus"]
telemetry = ["dep:opentelemetry", "dep:tracing-opentelemetry"]

# Documentation features
docs = ["dep:utoipa", "dep:utoipa-swagger-ui"]

# Integration features
integrations = ["redis-cache"]
redis-cache = ["dep:redis"]

# Development features
development = ["docs", "dev-tools"]
dev-tools = []

# Complete feature sets
web-security = ["security", "auth-advanced", "validation"]
full = ["production", "database", "integrations", "docs", "web-security"]

# Build profiles are defined at workspace root

[dev-dependencies]
http.workspace = true
http-body-util.workspace = true
reqwest = { workspace = true, features = ["json"] }
