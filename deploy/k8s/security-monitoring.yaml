apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: rust-security
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      - job_name: 'auth-service'
        static_configs:
          - targets: ['auth-service:9090']
        scrape_interval: 5s
        metrics_path: /metrics
        relabel_configs:
          - source_labels: [__address__]
            target_label: instance
          - target_label: service
            replacement: auth-service

      - job_name: 'policy-service'
        static_configs:
          - targets: ['policy-service:9090']
        scrape_interval: 5s
        
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)

  security-alerts.yml: |
    groups:
    - name: security.rules
      rules:
      # High error rate indicating potential attack
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"4..|5.."}[5m]) > 0.1
        for: 1m
        labels:
          severity: warning
          category: security
        annotations:
          summary: "High error rate detected on {{ $labels.instance }}"
          description: "Error rate is {{ $value }} errors per second"

      # Suspicious login attempts
      - alert: SuspiciousLoginAttempts
        expr: rate(auth_login_attempts_total{result="failed"}[5m]) > 5
        for: 30s
        labels:
          severity: critical
          category: security
        annotations:
          summary: "Suspicious login attempts detected"
          description: "{{ $value }} failed login attempts per second from {{ $labels.ip_address }}"

      # Rate limiting triggered frequently
      - alert: FrequentRateLimiting
        expr: rate(auth_rate_limit_exceeded_total[5m]) > 1
        for: 2m
        labels:
          severity: warning
          category: security
        annotations:
          summary: "Frequent rate limiting on {{ $labels.instance }}"
          description: "Rate limiting triggered {{ $value }} times per second"

      # Potential DDoS attack
      - alert: PotentialDDoSAttack
        expr: rate(nginx_http_requests_total[1m]) > 1000
        for: 30s
        labels:
          severity: critical
          category: security
        annotations:
          summary: "Potential DDoS attack detected"
          description: "Request rate is {{ $value }} requests per second"

      # High memory usage indicating potential memory attack
      - alert: HighMemoryUsage
        expr: (container_memory_usage_bytes{pod=~"auth-service-.*"} / container_spec_memory_limit_bytes) > 0.9
        for: 5m
        labels:
          severity: warning
          category: resource
        annotations:
          summary: "High memory usage on {{ $labels.pod }}"
          description: "Memory usage is {{ $value | humanizePercentage }}"

      # Service unavailable
      - alert: ServiceUnavailable
        expr: up{job="auth-service"} == 0
        for: 1m
        labels:
          severity: critical
          category: availability
        annotations:
          summary: "Auth service is unavailable"
          description: "{{ $labels.instance }} has been unavailable for more than 1 minute"

      # Auto-scaling events
      - alert: RapidScaling
        expr: changes(kube_deployment_status_replicas{deployment="auth-service"}[10m]) > 3
        for: 0s
        labels:
          severity: info
          category: scaling
        annotations:
          summary: "Rapid scaling detected for auth-service"
          description: "Auth service scaled {{ $value }} times in the last 10 minutes"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: rust-security
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.40.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=30d'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
        ports:
        - containerPort: 9090
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: storage
          mountPath: /prometheus
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: rust-security
  labels:
    app: prometheus
spec:
  ports:
  - port: 9090
    targetPort: 9090
  selector:
    app: prometheus

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: rust-security

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: rust-security