worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Permissions-Policy "camera=(), microphone=(), location=(), payment=()" always;

    # Security Configuration
    server_tokens off;
    client_max_body_size 1M;
    client_header_timeout 10s;
    client_body_timeout 10s;
    send_timeout 10s;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Logging
    log_format security '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"'
                       ' $request_id';

    access_log /var/log/nginx/access.log security;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss;

    # Upstream Services
    upstream auth_service {
        least_conn;
        server auth-service:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream policy_service {
        least_conn;
        server policy-service:8081 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream monitoring {
        server prometheus:9090 max_fails=3 fail_timeout=30s;
        server grafana:3000 max_fails=3 fail_timeout=30s;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # Main HTTPS Server
    server {
        listen 443 ssl http2;
        server_name _;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security
        limit_conn conn_limit_per_ip 20;

        # Auth Service Routes
        location /auth/ {
            limit_req zone=auth burst=20 nodelay;
            proxy_pass http://auth_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Security headers for API
            proxy_set_header X-Content-Type-Options nosniff;
            proxy_set_header X-Frame-Options DENY;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # Admin Routes (Enhanced Security)
        location /auth/admin/ {
            limit_req zone=auth burst=5 nodelay;
            
            # IP Whitelist for Admin (uncomment and configure)
            # allow 10.0.0.0/8;
            # allow 192.168.0.0/16;
            # deny all;
            
            proxy_pass http://auth_service/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }

        # Policy Service Routes
        location /policy/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://policy_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
        }

        # Health Check Endpoint
        location /health {
            access_log off;
            proxy_pass http://auth_service/health;
            proxy_set_header Host $host;
        }

        # Metrics Endpoint (Restricted)
        location /metrics {
            limit_req zone=auth burst=10 nodelay;
            
            # Restrict to monitoring systems
            allow 172.20.0.0/16;  # Docker network
            deny all;
            
            proxy_pass http://auth_service/metrics;
            proxy_set_header Host $host;
        }

        # Block common attack vectors
        location ~* \.(env|git|svn|log|bak|old|tmp)$ {
            deny all;
            return 404;
        }

        location ~* wp-(admin|content|config|includes) {
            deny all;
            return 404;
        }

        # Default deny for unknown paths
        location / {
            return 404;
        }
    }

    # Monitoring Dashboard (Internal)
    server {
        listen 8443 ssl http2;
        server_name _;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # Restrict access to internal networks
        allow 172.20.0.0/16;
        allow 10.0.0.0/8;
        allow 192.168.0.0/16;
        deny all;

        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
        }

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
        }
    }
}