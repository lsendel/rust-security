# Optimized Istio Service Mesh Configuration for Rust Security Platform
---
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: rust-security-mesh
  namespace: istio-system
spec:
  values:
    pilot:
      env:
        EXTERNAL_ISTIOD: false
        PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
        PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY: false
        PILOT_PUSH_THROTTLE: 100
        PILOT_DEBOUNCE_AFTER: "100ms"
        PILOT_DEBOUNCE_MAX: "10s"
    global:
      meshID: rust-security
      network: rust-security-network
      proxy:
        # Optimize proxy performance
        concurrency: 2
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
  components:
    pilot:
      k8s:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
          - name: PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION
            value: "true"
          - name: PILOT_PUSH_THROTTLE
            value: "100"
    proxy:
      k8s:
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
---
---
# Traffic Policy for Auth Service
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: auth-service-optimization
  namespace: rust-security
spec:
  host: auth-service.rust-security.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      consistentHash:
        httpHeaderName: "user-id" # Session affinity for better caching
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 5s
        tcpKeepalive:
          time: 7200s
          interval: 75s
          probes: 9
      http:
        http1MaxPendingRequests: 64
        http2MaxRequests: 1000
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        h2UpgradePolicy: UPGRADE # Force HTTP/2
        useClientProtocol: true
    outlierDetection:
      consecutiveGatewayErrors: 3
      consecutive5xxErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 30
      splitExternalLocalOriginErrors: true
---
---
# Traffic Policy for Policy Service
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: policy-service-optimization
  namespace: rust-security
spec:
  host: policy-service.rust-security.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN # Best for CPU-intensive policy evaluation
    connectionPool:
      tcp:
        maxConnections: 50
        connectTimeout: 3s
        tcpKeepalive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 32
        http2MaxRequests: 500
        maxRequestsPerConnection: 5
        maxRetries: 2
        h2UpgradePolicy: UPGRADE
    outlierDetection:
      consecutiveGatewayErrors: 2
      consecutive5xxErrors: 2
      interval: 15s
      baseEjectionTime: 15s
      maxEjectionPercent: 30
---
---
# Virtual Service for Advanced Routing
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: auth-service-routing
  namespace: rust-security
spec:
  hosts:
  - auth-service.rust-security.svc.cluster.local
  http:
  - match:
    - headers:
        priority:
          exact: "high"
    route:
    - destination:
        host: auth-service.rust-security.svc.cluster.local
      weight: 100
    timeout: 5s
    retries:
      attempts: 2
      perTryTimeout: 2s
      retryOn: 5xx,reset,connect-failure,refused-stream
  - route:
    - destination:
        host: auth-service.rust-security.svc.cluster.local
      weight: 100
    timeout: 10s
    retries:
      attempts: 3
      perTryTimeout: 3s
      retryOn: 5xx,reset,connect-failure,refused-stream
---
---
# Service Entry for External Dependencies
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: redis-external
  namespace: rust-security
spec:
  hosts:
  - redis.rust-security.svc.cluster.local
  ports:
  - number: 6379
    name: redis
    protocol: TCP
  location: MESH_EXTERNAL
  resolution: DNS
---
---
# Telemetry Configuration for Performance Monitoring
apiVersion: telemetry.istio.io/v1alpha1
kind: Telemetry
metadata:
  name: performance-metrics
  namespace: rust-security
spec:
  metrics:
  - providers:
    - name: prometheus
  - overrides:
    - match:
        metric: ALL_METRICS
      tagOverrides:
        request_id:
          operation: UPSERT
          value: "%{REQUEST_ID}"
        user_id:
          operation: UPSERT
          value: "%{REQUEST_HEADERS['user-id']}"
  accessLogging:
  - providers:
    - name: otel
