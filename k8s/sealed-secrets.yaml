# Sealed Secrets Configuration
# Alternative approach using Bitnami Sealed Secrets for GitOps-friendly secret management
# Install: kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.18.0/controller.yaml

# This is an example of a SealedSecret - replace with actual encrypted values
# Generate using: kubeseal --format=yaml < secret.yaml > sealed-secret.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: auth-service-sealed-secret
  namespace: rust-security
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/component: security
spec:
  template:
    metadata:
      name: auth-service-secret
      labels:
        app.kubernetes.io/name: auth-service
        app.kubernetes.io/managed-by: sealed-secrets
    type: Opaque
  encryptedData:
    # These are example encrypted values - replace with actual sealed secrets
    # Generate using: echo -n "your-secret" | kubeseal --raw --from-file=/dev/stdin --name=auth-service-sealed-secret --namespace=rust-security
    jwt-secret: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEQAMPLESEALEDSECRET...
    client-credentials: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEQAMPLESEALEDSECRET...
    request-signing-secret: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEQAMPLESEALEDSECRET...
    google-client-secret: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEQAMPLESEALEDSECRET...
    redis-password: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEQAMPLESEALEDSECRET...
---
# Redis Sealed Secret
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: redis-sealed-secret
  namespace: rust-security
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: database
spec:
  template:
    metadata:
      name: redis-secret
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/managed-by: sealed-secrets
    type: Opaque
  encryptedData:
    redis-password: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEQAMPLESEALEDSECRET...
---
# Policy Service Sealed Secret
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: policy-service-sealed-secret
  namespace: rust-security
  labels:
    app.kubernetes.io/name: policy-service
    app.kubernetes.io/component: authorization
spec:
  template:
    metadata:
      name: policy-service-secret
      labels:
        app.kubernetes.io/name: policy-service
        app.kubernetes.io/managed-by: sealed-secrets
    type: Opaque
  encryptedData:
    api-key: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEQAMPLESEALEDSECRET...
    database-url: AgBy3i4OJSWK+PiTySYZZA9rO43cGDEQAMPLESEALEDSECRET...