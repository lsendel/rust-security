[package]
name = "red-team-exercises"
version = "0.1.0"
edition = "2021"
description = "Red team security testing exercises and attack simulations"
authors = ["Security Team"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/company/rust-security"
keywords = ["security", "red-team", "penetration-testing", "cybersecurity"]
categories = ["command-line-utilities", "development-tools::testing"]
readme = "README.md"

[dependencies]
# Core async runtime with signal handling for graceful shutdown
tokio = { workspace = true, features = ["signal"] }
# HTTP client with rustls for better security
reqwest = { workspace = true, features = ["rustls-tls"], default-features = false }
# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
# Utilities
uuid = { workspace = true }
chrono = { workspace = true }
rand = "0.8.5"  # Keep local for specific version
anyhow = { workspace = true }
# Logging
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# Security-focused dependencies with workspace versions
base64 = { workspace = true }
jsonwebtoken = { version = "9.3", optional = true }  # Keep local - uses newer ring for security
sha2 = "0.10"  # Keep local for crypto consistency
hmac = "0.12"  # Keep local for crypto consistency
url = "2.5"  # Keep local version
redis = "0.27"  # Updated to match workspace security improvements
prometheus = "0.14"  # Keep local version
hyper = { version = "1.5", features = ["server", "http1", "http2"] }  # Specific features instead of "full"
urlencoding = "2.1"  # Keep local version
async-trait = { workspace = true }

# Optional dependencies with security fixes
# pprof2 = { workspace = true, optional = true }  # Removed due to RUSTSEC-2024-0408 memory safety issue
criterion = { version = "0.5.1", optional = true }

# Command line and utilities
clap = { workspace = true }
futures = { workspace = true }
pem = "3.0"  # Keep local version
x509-parser = "0.17.0"  # Keep updated security version
colored = "2.1.0"  # Keep compatible version
indicatif = "0.17.8"  # Keep compatible version  
tabular = "0.2"  # Keep local version
hex = { workspace = true }

# Integration dependencies with security focus
config = { workspace = true }
toml = "0.8.19"  # Keep for compatibility
xml-rs = "0.8"  # Keep local version
# elasticsearch = "8.5"  # Commented out alpha version - use stable if needed
serde-xml-rs = { version = "0.6.0", optional = true }  # Keep compatible version

# External service integrations (optional for security testing)
rdkafka = { version = "0.36.2", optional = true }
aws-sdk-s3 = { version = "1.0", optional = true }
aws-config = { version = "1.0", optional = true }
aws-sdk-sqs = { version = "1.0", optional = true }
slack-morphism = { version = "2.14.0", optional = true }
# teloxide = "0.12.2"  # Commented due to unmaintained proc-macro-error dependency
webhook = { version = "2.1", optional = true }

# Cryptography - security-focused selection
ring = { workspace = true, optional = true }  # Use workspace version for consistency
# rsa = "0.9.8"  # Removed due to RUSTSEC-2023-0071 - use ring or other alternatives

# DNS resolution - security-focused DNS resolution
hickory-resolver = { version = "0.24.1", optional = true }  # Replacement for trust-dns-resolver

[features]
# Default features for basic red team operations
default = ["basic-attacks"]

# Attack categories
basic-attacks = []
network-attacks = ["dep:hickory-resolver"]
crypto-attacks = ["dep:ring", "dep:jsonwebtoken"]
cloud-attacks = ["dep:aws-sdk-s3", "dep:aws-config", "dep:aws-sdk-sqs"]
data-attacks = ["dep:rdkafka", "dep:serde-xml-rs"]
social-attacks = ["dep:slack-morphism", "dep:webhook"]

# Development and testing
benchmarks = ["dep:criterion"]
all-attacks = ["network-attacks", "crypto-attacks", "cloud-attacks", "data-attacks", "social-attacks"]

# Security-focused lints
[lints]
rust.unsafe_code = "forbid"
rust.unused_crate_dependencies = "warn"
clippy.unwrap_used = "deny"
clippy.expect_used = "deny"
clippy.panic = "deny"
clippy.integer_arithmetic = "warn"
clippy.indexing_slicing = "warn"

# Build profiles optimized for security
[profile.security]
inherits = "release"
debug = false
strip = true
panic = "abort"
overflow-checks = true
lto = true
codegen-units = 1

# Development dependencies
[dev-dependencies]
criterion = { workspace = true }
pretty_assertions = "1.4"
tokio-test = { workspace = true }
tempfile = { workspace = true }
wiremock = { workspace = true }
